#!/bin/bash

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output directory
output_dir="pokemon_data"
mkdir -p "$output_dir"

# Error log file
error_log="fetch_errors.log"
> "$error_log"

# Max number of concurrent jobs (optional throttling)
MAX_JOBS=5

# Function to fetch a single Pokémon
fetch_pokemon() {
  local name=$1
  local output_file="$output_dir/${name}.json"
  local url="https://pokeapi.co/api/v2/pokemon/$name"

  for attempt in {1..3}; do
    curl -s -f "$url" -o "$output_file" && {
      echo "Saved data to $output_file ✅"
      return
    }
    echo "Attempt $attempt failed for $name"
    sleep 1
  done

  echo "❌ Failed to fetch data for $name after 3 attempts." >> "$error_log"
}

# Launch background jobs with process control
running_jobs=0

for pokemon in "${pokemon_list[@]}"; do
  echo "Fetching data for $pokemon..."

  # Start fetch in background
  fetch_pokemon "$pokemon" &

  # Count and throttle background jobs
  ((running_jobs++))
  if [[ $running_jobs -ge $MAX_JOBS ]]; then
    wait -n  # wait for any one job to finish
    ((running_jobs--))
  fi
done

# Wait for all remaining jobs to complete
wait

echo "✅ All fetch jobs completed."
