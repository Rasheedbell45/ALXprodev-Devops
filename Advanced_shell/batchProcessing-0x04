#!/bin/bash

# List of Pokémon to fetch
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output directory
output_dir="pokemon_data"
mkdir -p "$output_dir"

# Error log
error_log="fetch_errors.log"
> "$error_log"

# Max concurrent jobs
MAX_JOBS=5

# Function to fetch one Pokémon
fetch_pokemon() {
  local name=$1
  local url="https://pokeapi.co/api/v2/pokemon/$name"
  local outfile="$output_dir/${name}.json"

  for attempt in {1..3}; do
    curl -s -f "$url" -o "$outfile" && {
      echo "Saved data to $outfile ✅"
      return
    }
    echo "Attempt $attempt failed for $name"
    sleep 1
  done

  echo "❌ Failed to fetch data for $name after 3 attempts." >> "$error_log"
}

# Track background job count
job_count=0

for pokemon in "${pokemon_list[@]}"; do
  echo "Fetching data for $pokemon..."

  # Run fetch in background
  fetch_pokemon "$pokemon" &

  ((job_count++))

  # Limit number of background jobs
  if [[ $job_count -ge $MAX_JOBS ]]; then
    wait -n    # wait for any job to finish before continuing
    ((job_count--))
  fi
done

# Wait for all remaining background jobs
wait

echo "✅ All fetch jobs completed."
